import Foundation

// TODO: Add redirects for the formal grammar's anchors.
// TODO: Entries below where the 'docc' value is "" couldn't be automatically filled in -- they need to be filled in manually.
let headings: [(String, String, String)] = [
    (stableID: "ID0", sphinx: "GuidedTour/AboutSwift", docc: "aboutswift"),
    (stableID: "ID1", sphinx: "GuidedTour/GuidedTour", docc: "guidedtour"),
    (stableID: "ID2", sphinx: "GuidedTour/GuidedTourPart", docc: "guidedtour"),
    (stableID: "ID3", sphinx: "LanguageGuide/AccessControl", docc: "accesscontrol"),
    (stableID: "ID4", sphinx: "accesscontrol-modulesandsourcefiles", docc: "accesscontrol#Modules-and-Source-Files"),
    (stableID: "ID5", sphinx: "accesscontrol-accesslevels", docc: "accesscontrol#Access-Levels"),
    (stableID: "ID6", sphinx: "accesscontrol-guidingprincipleofaccesslevels", docc: "accesscontrol#Guiding-Principle-of-Access-Levels"),
    (stableID: "ID7", sphinx: "accesscontrol-defaultaccesslevels", docc: "accesscontrol#Default-Access-Levels"),
    (stableID: "ID8", sphinx: "accesscontrol-accesslevelsforsingletargetapps", docc: "accesscontrol#Access-Levels-for-Single-Target-Apps"),
    (stableID: "ID9", sphinx: "accesscontrol-accesslevelsforframeworks", docc: "accesscontrol#Access-Levels-for-Frameworks"),
    (stableID: "ID10", sphinx: "accesscontrol-accesscontrolsyntax", docc: "accesscontrol#Access-Control-Syntax"),
    (stableID: "ID11", sphinx: "accesscontrol-customtypes", docc: "accesscontrol#Custom-Types"),
    (stableID: "ID12", sphinx: "accesscontrol-tupletypes", docc: "accesscontrol#Tuple-Types"),
    (stableID: "ID13", sphinx: "accesscontrol-functiontypes", docc: "accesscontrol#Function-Types"),
    (stableID: "ID14", sphinx: "accesscontrol-enumerationtypes", docc: "accesscontrol#Enumeration-Types"),
    (stableID: "ID15", sphinx: "accesscontrol-nestedtypes", docc: "accesscontrol#Nested-Types"),
    (stableID: "ID16", sphinx: "accesscontrol-subclassing", docc: "accesscontrol#Subclassing"),
    (stableID: "ID17", sphinx: "accesscontrol-constantsvariablespropertiesandsubscripts", docc: "accesscontrol#Constants-Variables-Properties-and-Subscripts"),
    (stableID: "ID18", sphinx: "accesscontrol-gettersandsetters", docc: "accesscontrol#Getters-and-Setters"),
    (stableID: "ID19", sphinx: "accesscontrol-initializers", docc: "accesscontrol#Initializers"),
    (stableID: "ID20", sphinx: "accesscontrol-defaultinitializers", docc: "accesscontrol#Default-Initializers"),
    (stableID: "ID21", sphinx: "accesscontrol-defaultmemberwiseinitializersforstructuretypes", docc: "accesscontrol#Default-Memberwise-Initializers-for-Structure-Types"),
    (stableID: "ID22", sphinx: "accesscontrol-protocols", docc: "accesscontrol#Protocols"),
    (stableID: "ID23", sphinx: "accesscontrol-protocolinheritance", docc: "accesscontrol#Protocol-Inheritance"),
    (stableID: "ID24", sphinx: "accesscontrol-protocolconformance", docc: "accesscontrol#Protocol-Conformance"),
    (stableID: "ID25", sphinx: "accesscontrol-extensions", docc: "accesscontrol#Extensions"),
    (stableID: "ID26", sphinx: "accesscontrol-generics", docc: "accesscontrol#Generics"),
    (stableID: "ID27", sphinx: "accesscontrol-typealiases", docc: "accesscontrol#Type-Aliases"),
    (stableID: "ID28", sphinx: "LanguageGuide/AdvancedOperators", docc: "advancedoperators"),
    (stableID: "ID29", sphinx: "advancedoperators-bitwiseoperators", docc: "advancedoperators#Bitwise-Operators"),
    (stableID: "ID30", sphinx: "advancedoperators-bitwisenotoperator", docc: "advancedoperators#Bitwise-NOT-Operator"),
    (stableID: "ID31", sphinx: "advancedoperators-bitwiseandoperator", docc: "advancedoperators#Bitwise-AND-Operator"),
    (stableID: "ID32", sphinx: "advancedoperators-bitwiseoroperator", docc: "advancedoperators#Bitwise-OR-Operator"),
    (stableID: "ID33", sphinx: "advancedoperators-bitwisexoroperator", docc: "advancedoperators#Bitwise-XOR-Operator"),
    (stableID: "ID34", sphinx: "advancedoperators-bitwiseleftandrightshiftoperators", docc: "advancedoperators#Bitwise-Left-and-Right-Shift-Operators"),
    (stableID: "ID35", sphinx: "advancedoperators-shiftingbehaviorforunsignedintegers", docc: "advancedoperators#Shifting-Behavior-for-Unsigned-Integers"),
    (stableID: "ID36", sphinx: "advancedoperators-shiftingbehaviorforsignedintegers", docc: "advancedoperators#Shifting-Behavior-for-Signed-Integers"),
    (stableID: "ID37", sphinx: "advancedoperators-overflowoperators", docc: "advancedoperators#Overflow-Operators"),
    (stableID: "ID38", sphinx: "advancedoperators-valueoverflow", docc: "advancedoperators#Value-Overflow"),
    (stableID: "ID40", sphinx: "advancedoperators-divisionbyzero", docc: "advancedoperators#"),
    (stableID: "ID41", sphinx: "advancedoperators-precedenceandassociativity", docc: "advancedoperators#Precedence-and-Associativity"),
    (stableID: "ID42", sphinx: "advancedoperators-operatorfunctions", docc: "advancedoperators#Operator-Methods"),
    (stableID: "ID43", sphinx: "advancedoperators-prefixandpostfixoperators", docc: "advancedoperators#Prefix-and-Postfix-Operators"),
    (stableID: "ID44", sphinx: "advancedoperators-compoundassignmentoperators", docc: "advancedoperators#Compound-Assignment-Operators"),
    (stableID: "ID45", sphinx: "advancedoperators-equivalenceoperators", docc: "advancedoperators#Equivalence-Operators"),
    (stableID: "ID46", sphinx: "advancedoperators-customoperators", docc: "advancedoperators#Custom-Operators"),
    (stableID: "ID47", sphinx: "advancedoperators-precedenceandassociativityforcustomoperators", docc: "advancedoperators#Precedence-for-Custom-Infix-Operators"),
    (stableID: "ID48", sphinx: "LanguageGuide/AutomaticReferenceCounting", docc: "automaticreferencecounting"),
    (stableID: "ID49", sphinx: "automaticreferencecounting-howarcworks", docc: "automaticreferencecounting#How-ARC-Works"),
    (stableID: "ID50", sphinx: "automaticreferencecounting-arcinaction", docc: "automaticreferencecounting#ARC-in-Action"),
    (stableID: "ID51", sphinx: "automaticreferencecounting-strongreferencecyclesbetweenclassinstances", docc: "automaticreferencecounting#Strong-Reference-Cycles-Between-Class-Instances"),
    (stableID: "ID52", sphinx: "automaticreferencecounting-resolvingstrongreferencecyclesbetweenclassinstances", docc: "automaticreferencecounting#Resolving-Strong-Reference-Cycles-Between-Class-Instances"),
    (stableID: "ID53", sphinx: "automaticreferencecounting-weakreferencesbetweenclassinstances", docc: "automaticreferencecounting#Weak-References"),
    (stableID: "ID54", sphinx: "automaticreferencecounting-unownedreferencesbetweenclassinstances", docc: "automaticreferencecounting#Unowned-References"),
    (stableID: "ID55", sphinx: "automaticreferencecounting-unownedreferencesandimplicitlyunwrappedoptionalproperties", docc: "automaticreferencecounting#Unowned-References-and-Implicitly-Unwrapped-Optional-Properties"),
    (stableID: "ID56", sphinx: "automaticreferencecounting-strongreferencecyclesforclosures", docc: "automaticreferencecounting#Strong-Reference-Cycles-for-Closures"),
    (stableID: "ID57", sphinx: "automaticreferencecounting-resolvingstrongreferencecyclesforclosures", docc: "automaticreferencecounting#Resolving-Strong-Reference-Cycles-for-Closures"),
    (stableID: "ID58", sphinx: "automaticreferencecounting-definingacapturelist", docc: "automaticreferencecounting#Defining-a-Capture-List"),
    (stableID: "ID59", sphinx: "automaticreferencecounting-weakandunownedreferencesforclosures", docc: "automaticreferencecounting#Weak-and-Unowned-References"),
    (stableID: "ID60", sphinx: "LanguageGuide/BasicOperators", docc: "basicoperators"),
    (stableID: "ID61", sphinx: "basicoperators-terminology", docc: "basicoperators#Terminology"),
    (stableID: "ID62", sphinx: "basicoperators-assignmentoperator", docc: "basicoperators#Assignment-Operator"),
    (stableID: "ID63", sphinx: "basicoperators-arithmeticoperators", docc: "basicoperators#Arithmetic-Operators"),
    (stableID: "ID64", sphinx: "basicoperators-remainderoperator", docc: "basicoperators#Remainder-Operator"),
    (stableID: "ID65", sphinx: "basicoperators-floatingpointremaindercalculations", docc: "basicoperators#"),
    (stableID: "ID66", sphinx: "basicoperators-incrementanddecrementoperators", docc: "basicoperators#"),
    (stableID: "ID67", sphinx: "basicoperators-unaryminusoperator", docc: "basicoperators#Unary-Minus-Operator"),
    (stableID: "ID68", sphinx: "basicoperators-unaryplusoperator", docc: "basicoperators#Unary-Plus-Operator"),
    (stableID: "ID69", sphinx: "basicoperators-compoundassignmentoperators", docc: "basicoperators#Compound-Assignment-Operators"),
    (stableID: "ID70", sphinx: "basicoperators-comparisonoperators", docc: "basicoperators#Comparison-Operators"),
    (stableID: "ID71", sphinx: "basicoperators-ternaryconditionaloperator", docc: "basicoperators#Ternary-Conditional-Operator"),
    (stableID: "ID72", sphinx: "basicoperators-nilcoalescingoperator", docc: "basicoperators#Nil-Coalescing-Operator"),
    (stableID: "ID73", sphinx: "basicoperators-rangeoperators", docc: "basicoperators#Range-Operators"),
    (stableID: "ID74", sphinx: "basicoperators-closedrangeoperator", docc: "basicoperators#Closed-Range-Operator"),
    (stableID: "ID75", sphinx: "basicoperators-halfclosedrangeoperator", docc: "basicoperators#Half-Open-Range-Operator"),
    (stableID: "ID76", sphinx: "basicoperators-logicaloperators", docc: "basicoperators#Logical-Operators"),
    (stableID: "ID77", sphinx: "basicoperators-logicalnotoperator", docc: "basicoperators#Logical-NOT-Operator"),
    (stableID: "ID78", sphinx: "basicoperators-logicalandoperator", docc: "basicoperators#Logical-AND-Operator"),
    (stableID: "ID79", sphinx: "basicoperators-logicaloroperator", docc: "basicoperators#Logical-OR-Operator"),
    (stableID: "ID80", sphinx: "basicoperators-combininglogicaloperators", docc: "basicoperators#Combining-Logical-Operators"),
    (stableID: "ID81", sphinx: "basicoperators-explicit-parentheses", docc: "basicoperators#Explicit-Parentheses"),
    (stableID: "ID82", sphinx: "LanguageGuide/ClassesAndStructures", docc: "classesandstructures"),
    (stableID: "ID83", sphinx: "classesandstructures-comparingclassesandstructures", docc: "classesandstructures#Comparing-Structures-and-Classes"),
    (stableID: "ID84", sphinx: "classesandstructures-definitionsyntax", docc: "classesandstructures#Definition-Syntax"),
    (stableID: "ID85", sphinx: "classesandstructures-classandstructureinstances", docc: "classesandstructures#Structure-and-Class-Instances"),
    (stableID: "ID86", sphinx: "classesandstructures-accessingproperties", docc: "classesandstructures#Accessing-Properties"),
    (stableID: "ID87", sphinx: "classesandstructures-memberwiseinitializersforstructuretypes", docc: "classesandstructures#Memberwise-Initializers-for-Structure-Types"),
    (stableID: "ID88", sphinx: "classesandstructures-structuresandenumerationsarevaluetypes", docc: "classesandstructures#Structures-and-Enumerations-Are-Value-Types"),
    (stableID: "ID89", sphinx: "classesandstructures-classesarereferencetypes", docc: "classesandstructures#Classes-Are-Reference-Types"),
    (stableID: "ID90", sphinx: "classesandstructures-identityoperators", docc: "classesandstructures#Identity-Operators"),
    (stableID: "ID91", sphinx: "classesandstructures-pointers", docc: "classesandstructures#Pointers"),
    (stableID: "ID92", sphinx: "classesandstructures-choosingbetweenclassesandstructures", docc: "classesandstructures#"),
    (stableID: "ID93", sphinx: "classesandstructures-assignmentandcopybehaviorforstringsarraysanddictionaries", docc: "classesandstructures#"),
    (stableID: "ID94", sphinx: "LanguageGuide/Closures", docc: "closures"),
    (stableID: "ID95", sphinx: "closures-closureexpressions", docc: "closures#Closure-Expressions"),
    (stableID: "ID96", sphinx: "closures-thesortedfunction", docc: "closures#The-Sorted-Method"),
    (stableID: "ID97", sphinx: "closures-closureexpressionsyntax", docc: "closures#Closure-Expression-Syntax"),
    (stableID: "ID98", sphinx: "closures-inferringtypefromcontext", docc: "closures#Inferring-Type-From-Context"),
    (stableID: "ID99", sphinx: "closures-implicitreturnsfromsingleexpressionclosures", docc: "closures#Implicit-Returns-from-Single-Expression-Closures"),
    (stableID: "ID100", sphinx: "closures-shorthandargumentnames", docc: "closures#Shorthand-Argument-Names"),
    (stableID: "ID101", sphinx: "closures-operatorfunctions", docc: "closures#Operator-Methods"),
    (stableID: "ID102", sphinx: "closures-trailingclosures", docc: "closures#Trailing-Closures"),
    (stableID: "ID103", sphinx: "closures-capturingvalues", docc: "closures#Capturing-Values"),
    (stableID: "ID104", sphinx: "closures-closuresarereferencetypes", docc: "closures#Closures-Are-Reference-Types"),
    (stableID: "ID105", sphinx: "LanguageGuide/CollectionTypes", docc: "collectiontypes"),
    (stableID: "ID106", sphinx: "collectiontypes-mutabilityofcollections", docc: "collectiontypes#Mutability-of-Collections"),
    (stableID: "ID107", sphinx: "collectiontypes-arrays", docc: "collectiontypes#Arrays"),
    (stableID: "ID108", sphinx: "collectiontypes-arraytypeshorthandsyntax", docc: "collectiontypes#Array-Type-Shorthand-Syntax"),
    (stableID: "ID109", sphinx: "collectiontypes-arrayliterals", docc: "collectiontypes#Creating-an-Array-with-an-Array-Literal"),
    (stableID: "ID110", sphinx: "collectiontypes-accessingandmodifyinganarray", docc: "collectiontypes#Accessing-and-Modifying-an-Array"),
    (stableID: "ID111", sphinx: "collectiontypes-iteratingoveranarray", docc: "collectiontypes#Iterating-Over-an-Array"),
    (stableID: "ID112", sphinx: "collectiontypes-creatingandinitializinganarray", docc: "collectiontypes#Creating-an-Empty-Array"),
    (stableID: "ID113", sphinx: "collectiontypes-dictionaries", docc: "collectiontypes#Dictionaries"),
    (stableID: "ID114", sphinx: "collectiontypes-dictionarytypeshorthandsyntax", docc: "collectiontypes#Dictionary-Type-Shorthand-Syntax"),
    (stableID: "ID115", sphinx: "collectiontypes-dictionaryliterals", docc: "collectiontypes#Creating-a-Dictionary-with-a-Dictionary-Literal"),
    (stableID: "ID116", sphinx: "collectiontypes-accessingandmodifyingadictionary", docc: "collectiontypes#Accessing-and-Modifying-a-Dictionary"),
    (stableID: "ID117", sphinx: "collectiontypes-iteratingoveradictionary", docc: "collectiontypes#Iterating-Over-a-Dictionary"),
    (stableID: "ID118", sphinx: "collectiontypes-creatinganemptydictionary", docc: "collectiontypes#Creating-an-Empty-Dictionary"),
    (stableID: "ID119", sphinx: "collectiontypes-hashvaluesfordictionarykeytypes", docc: ""),
    (stableID: "ID120", sphinx: "LanguageGuide/ControlFlow", docc: ""),
    (stableID: "ID121", sphinx: "controlflow-forloops", docc: ""),
    (stableID: "ID122", sphinx: "controlflow-forin", docc: ""),
    (stableID: "ID123", sphinx: "controlflow-forconditionincrement", docc: ""),
    (stableID: "ID124", sphinx: "controlflow-whileloops", docc: "controlflow#While-Loops"),
    (stableID: "ID125", sphinx: "controlflow-while", docc: "controlflow#While"),
    (stableID: "ID126", sphinx: "controlflow-dowhile", docc: ""),
    (stableID: "ID127", sphinx: "controlflow-conditionalstatements", docc: "controlflow#Conditional-Statements"),
    (stableID: "ID128", sphinx: "controlflow-if", docc: "controlflow#If"),
    (stableID: "ID129", sphinx: "controlflow-switch", docc: "controlflow#Switch"),
    (stableID: "ID130", sphinx: "controlflow-noimplicitfallthrough", docc: "controlflow#No-Implicit-Fallthrough"),
    (stableID: "ID131", sphinx: "controlflow-rangematching", docc: ""),
    (stableID: "ID132", sphinx: "controlflow-tuples", docc: "controlflow#Tuples"),
    (stableID: "ID133", sphinx: "controlflow-valuebindings", docc: "controlflow#Value-Bindings"),
    (stableID: "ID134", sphinx: "controlflow-where", docc: "controlflow#Where"),
    (stableID: "ID135", sphinx: "controlflow-controltransferstatements", docc: "controlflow#Control-Transfer-Statements"),
    (stableID: "ID136", sphinx: "controlflow-continue", docc: "controlflow#Continue"),
    (stableID: "ID137", sphinx: "controlflow-break", docc: "controlflow#Break"),
    (stableID: "ID138", sphinx: "controlflow-breakinaloop", docc: ""),
    (stableID: "ID139", sphinx: "controlflow-breakinaswitchstatement", docc: "controlflow#Break-in-a-Switch-Statement"),
    (stableID: "ID140", sphinx: "controlflow-fallthrough", docc: "controlflow#Fallthrough"),
    (stableID: "ID141", sphinx: "controlflow-labeledstatements", docc: "controlflow#Labeled-Statements"),
    (stableID: "ID142", sphinx: "LanguageGuide/Deinitialization", docc: ""),
    (stableID: "ID143", sphinx: "deinitialization-howdeinitializationworks", docc: "deinitialization#How-Deinitialization-Works"),
    (stableID: "ID144", sphinx: "deinitialization-deinitializersinaction", docc: "deinitialization#Deinitializers-in-Action"),
    (stableID: "ID145", sphinx: "LanguageGuide/Enumerations", docc: ""),
    (stableID: "ID146", sphinx: "enumerations-enumerationsyntax", docc: "enumerations#Enumeration-Syntax"),
    (stableID: "ID147", sphinx: "enumerations-matchingenumerationvalueswithaswitchstatement", docc: "enumerations#Matching-Enumeration-Values-with-a-Switch-Statement"),
    (stableID: "ID148", sphinx: "enumerations-associatedvalues", docc: "enumerations#Associated-Values"),
    (stableID: "ID149", sphinx: "enumerations-rawvalues", docc: "enumerations#Raw-Values"),
    (stableID: "ID150", sphinx: "enumerations-initializingfromarawvalue", docc: "enumerations#Initializing-from-a-Raw-Value"),
    (stableID: "ID151", sphinx: "LanguageGuide/Extensions", docc: ""),
    (stableID: "ID152", sphinx: "extensions-computedproperties", docc: "extensions#Computed-Properties"),
    (stableID: "ID153", sphinx: "extensions-initializers", docc: "extensions#Initializers"),
    (stableID: "ID154", sphinx: "extensions-methods", docc: "extensions#Methods"),
    (stableID: "ID155", sphinx: "extensions-mutatinginstancemethods", docc: "extensions#Mutating-Instance-Methods"),
    (stableID: "ID156", sphinx: "extensions-subscripts", docc: "extensions#Subscripts"),
    (stableID: "ID157", sphinx: "extensions-nestedtypes", docc: "extensions#Nested-Types"),
    (stableID: "ID158", sphinx: "LanguageGuide/Functions", docc: ""),
    (stableID: "ID159", sphinx: "functions-definingandcallingfunctions", docc: "functions#Defining-and-Calling-Functions"),
    (stableID: "ID160", sphinx: "functions-functionparametersandreturnvalues", docc: "functions#Function-Parameters-and-Return-Values"),
    (stableID: "ID162", sphinx: "functions-functionswithoutparameters", docc: "functions#Functions-Without-Parameters"),
    (stableID: "ID163", sphinx: "functions-functionswithoutreturnvalues", docc: "functions#Functions-Without-Return-Values"),
    (stableID: "ID164", sphinx: "functions-functionswithmultiplereturnvalues", docc: "functions#Functions-with-Multiple-Return-Values"),
    (stableID: "ID165", sphinx: "functions-optionaltuplereturntypes", docc: "functions#Optional-Tuple-Return-Types"),
    (stableID: "ID166", sphinx: "functions-functionparameternames", docc: ""),
    (stableID: "ID167", sphinx: "functions-externalparameternames", docc: ""),
    (stableID: "ID168", sphinx: "functions-shorthandexternalparameternames", docc: ""),
    (stableID: "ID169", sphinx: "functions-defaultparametervalues", docc: "functions#Default-Parameter-Values"),
    (stableID: "ID170", sphinx: "functions-externalnamesforparameterswithdefaultvalues", docc: ""),
    (stableID: "ID171", sphinx: "functions-variadicparameters", docc: "functions#Variadic-Parameters"),
    (stableID: "ID172", sphinx: "functions-constantandvariableparameters", docc: ""),
    (stableID: "ID173", sphinx: "functions-inoutparameters", docc: "functions#In-Out-Parameters"),
    (stableID: "ID174", sphinx: "functions-functiontypes", docc: "functions#Function-Types"),
    (stableID: "ID175", sphinx: "functions-usingfunctiontypes", docc: "functions#Using-Function-Types"),
    (stableID: "ID176", sphinx: "functions-functiontypesasparametertypes", docc: "functions#Function-Types-as-Parameter-Types"),
    (stableID: "ID177", sphinx: "functions-functiontypesasreturntypes", docc: "functions#Function-Types-as-Return-Types"),
    (stableID: "ID178", sphinx: "functions-nestedfunctions", docc: "functions#Nested-Functions"),
    (stableID: "ID179", sphinx: "LanguageGuide/Generics", docc: ""),
    (stableID: "ID180", sphinx: "generics-theproblemthatgenericssolve", docc: "generics#The-Problem-That-Generics-Solve"),
    (stableID: "ID181", sphinx: "generics-genericfunctions", docc: "generics#Generic-Functions"),
    (stableID: "ID182", sphinx: "generics-typeparameters", docc: "generics#Type-Parameters"),
    (stableID: "ID183", sphinx: "generics-namingtypeparameters", docc: "generics#Naming-Type-Parameters"),
    (stableID: "ID184", sphinx: "generics-generictypes", docc: "generics#Generic-Types"),
    (stableID: "ID185", sphinx: "generics-extendingagenerictype", docc: "generics#Extending-a-Generic-Type"),
    (stableID: "ID186", sphinx: "generics-typeconstraints", docc: "generics#Type-Constraints"),
    (stableID: "ID187", sphinx: "generics-typeconstraintsyntax", docc: "generics#Type-Constraint-Syntax"),
    (stableID: "ID188", sphinx: "generics-typeconstraintsinaction", docc: "generics#Type-Constraints-in-Action"),
    (stableID: "ID189", sphinx: "generics-associatedtypes", docc: "generics#Associated-Types"),
    (stableID: "ID190", sphinx: "generics-associatedtypesinaction", docc: "generics#Associated-Types-in-Action"),
    (stableID: "ID191", sphinx: "generics-extendinganexistingtypetospecifyanassociatedtype", docc: "generics#Extending-an-Existing-Type-to-Specify-an-Associated-Type"),
    (stableID: "ID192", sphinx: "generics-whereclauses", docc: ""),
    (stableID: "ID193", sphinx: "LanguageGuide/Inheritance", docc: ""),
    (stableID: "ID194", sphinx: "inheritance-definingabaseclass", docc: "inheritance#Defining-a-Base-Class"),
    (stableID: "ID195", sphinx: "inheritance-subclassing", docc: "inheritance#Subclassing"),
    (stableID: "ID196", sphinx: "inheritance-overriding", docc: "inheritance#Overriding"),
    (stableID: "ID197", sphinx: "inheritance-accessingsuperclass", docc: ""),
    (stableID: "ID198", sphinx: "inheritance-overridingmethods", docc: "inheritance#Overriding-Methods"),
    (stableID: "ID199", sphinx: "inheritance-overridingproperties", docc: "inheritance#Overriding-Properties"),
    (stableID: "ID200", sphinx: "inheritance-overridingpropertygettersandsetters", docc: "inheritance#Overriding-Property-Getters-and-Setters"),
    (stableID: "ID201", sphinx: "inheritance-overridingpropertyobservers", docc: "inheritance#Overriding-Property-Observers"),
    (stableID: "ID202", sphinx: "inheritance-preventingoverrides", docc: "inheritance#Preventing-Overrides"),
    (stableID: "ID203", sphinx: "LanguageGuide/Initialization", docc: ""),
    (stableID: "ID204", sphinx: "initialization-settinginitialvaluesforstoredproperties", docc: "initialization#Setting-Initial-Values-for-Stored-Properties"),
    (stableID: "ID205", sphinx: "initialization-initializers", docc: "initialization#Initializers"),
    (stableID: "ID206", sphinx: "initialization-defaultpropertyvalues", docc: "initialization#Default-Property-Values"),
    (stableID: "ID207", sphinx: "initialization-customizinginitialization", docc: "initialization#Customizing-Initialization"),
    (stableID: "ID208", sphinx: "initialization-initializationparameters", docc: "initialization#Initialization-Parameters"),
    (stableID: "ID209", sphinx: "initialization-localandexternalnames", docc: ""),
    (stableID: "ID210", sphinx: "initialization-initializerparameterswithoutexternalnames", docc: ""),
    (stableID: "ID211", sphinx: "initialization-optionalpropertytypes", docc: "initialization#Optional-Property-Types"),
    (stableID: "ID212", sphinx: "initialization-modifyingconstantpropertiesduringinitialization", docc: ""),
    (stableID: "ID213", sphinx: "initialization-defaultinitializers", docc: "initialization#Default-Initializers"),
    (stableID: "ID214", sphinx: "initialization-memberwiseinitializersforstructuretypes", docc: "initialization#Memberwise-Initializers-for-Structure-Types"),
    (stableID: "ID215", sphinx: "initialization-initializerdelegationforvaluetypes", docc: "initialization#Initializer-Delegation-for-Value-Types"),
    (stableID: "ID216", sphinx: "initialization-classinheritanceandinitialization", docc: "initialization#Class-Inheritance-and-Initialization"),
    (stableID: "ID217", sphinx: "initialization-designatedinitializersandconvenienceinitializers", docc: "initialization#Designated-Initializers-and-Convenience-Initializers"),
    (stableID: "ID218", sphinx: "initialization-syntaxfordesignatedandconvenienceinitializers", docc: "initialization#Syntax-for-Designated-and-Convenience-Initializers"),
    (stableID: "ID219", sphinx: "initialization-initializerchaining", docc: ""),
    (stableID: "ID220", sphinx: "initialization-twophaseinitialization", docc: "initialization#Two-Phase-Initialization"),
    (stableID: "ID221", sphinx: "initialization-initializerinheritanceandoverriding", docc: "initialization#Initializer-Inheritance-and-Overriding"),
    (stableID: "ID222", sphinx: "initialization-automaticinitializerinheritance", docc: "initialization#Automatic-Initializer-Inheritance"),
    (stableID: "ID223", sphinx: "initialization-designatedandconvenienceinitializersinaction", docc: "initialization#Designated-and-Convenience-Initializers-in-Action"),
    (stableID: "ID224", sphinx: "initialization-failableinitializers", docc: "initialization#Failable-Initializers"),
    (stableID: "ID225", sphinx: "initialization-failableinitializersforenumerations", docc: "initialization#Failable-Initializers-for-Enumerations"),
    (stableID: "ID226", sphinx: "initialization-failableinitializersforenumerationswithrawvalues", docc: "initialization#Failable-Initializers-for-Enumerations-with-Raw-Values"),
    (stableID: "ID228", sphinx: "initialization-propagationofinitializationfailure", docc: "initialization#Propagation-of-Initialization-Failure"),
    (stableID: "ID229", sphinx: "initialization-overridingafailableinitializer", docc: "initialization#Overriding-a-Failable-Initializer"),
    (stableID: "ID230", sphinx: "initialization-implicitlyunwrappedfailableinitializers", docc: ""),
    (stableID: "ID231", sphinx: "initialization-requiredinitializers", docc: "initialization#Required-Initializers"),
    (stableID: "ID232", sphinx: "initialization-settingadefaultpropertyvaluewithaclosureorfunction", docc: "initialization#Setting-a-Default-Property-Value-with-a-Closure-or-Function"),
    (stableID: "ID233", sphinx: "LanguageGuide/LanguageGuidePart", docc: ""),
    (stableID: "ID234", sphinx: "LanguageGuide/Methods", docc: ""),
    (stableID: "ID235", sphinx: "methods-instancemethods", docc: "methods#Instance-Methods"),
    (stableID: "ID236", sphinx: "methods-localandexternalnamesformethods", docc: ""),
    (stableID: "ID238", sphinx: "methods-theselfproperty", docc: "methods#The-self-Property"),
    (stableID: "ID239", sphinx: "methods-modifyingvaluetypesfromwithininstancemethods", docc: "methods#Modifying-Value-Types-from-Within-Instance-Methods"),
    (stableID: "ID240", sphinx: "methods-assigningtoselfwithinamutatingmethod", docc: "methods#Assigning-to-self-Within-a-Mutating-Method"),
    (stableID: "ID241", sphinx: "methods-typemethods", docc: "methods#Type-Methods"),
    (stableID: "ID242", sphinx: "LanguageGuide/NestedTypes", docc: ""),
    (stableID: "ID243", sphinx: "nestedtypes-nestedtypesinaction", docc: "nestedtypes#Nested-Types-in-Action"),
    (stableID: "ID244", sphinx: "nestedtypes-referringtonestedtypes", docc: "nestedtypes#Referring-to-Nested-Types"),
    (stableID: "ID245", sphinx: "LanguageGuide/OptionalChaining", docc: ""),
    (stableID: "ID246", sphinx: "optionalchaining-optionalchainingasanalternativetoforcedunwrapping", docc: "optionalchaining#Optional-Chaining-as-an-Alternative-to-Forced-Unwrapping"),
    (stableID: "ID247", sphinx: "optionalchaining-definingmodelclassesforoptionalchaining", docc: "optionalchaining#Defining-Model-Classes-for-Optional-Chaining"),
    (stableID: "ID248", sphinx: "optionalchaining-callingpropertiesthroughoptionalchaining", docc: ""),
    (stableID: "ID249", sphinx: "optionalchaining-callingmethodsthroughoptionalchaining", docc: "optionalchaining#Calling-Methods-Through-Optional-Chaining"),
    (stableID: "ID250", sphinx: "optionalchaining-callingsubscriptsthroughoptionalchaining", docc: ""),
    (stableID: "ID251", sphinx: "optionalchaining-accessingsubscriptsofoptionaltype", docc: "optionalchaining#Accessing-Subscripts-of-Optional-Type"),
    (stableID: "ID252", sphinx: "optionalchaining-linkingmultiplelevelsofchaining", docc: "optionalchaining#Linking-Multiple-Levels-of-Chaining"),
    (stableID: "ID253", sphinx: "optionalchaining-chainingonmethodswithoptionalreturnvalues", docc: "optionalchaining#Chaining-on-Methods-with-Optional-Return-Values"),
    (stableID: "ID254", sphinx: "LanguageGuide/Properties", docc: ""),
    (stableID: "ID255", sphinx: "properties-storedproperties", docc: "properties#Stored-Properties"),
    (stableID: "ID256", sphinx: "properties-storedpropertiesofconstantstructureinstances", docc: "properties#Stored-Properties-of-Constant-Structure-Instances"),
    (stableID: "ID257", sphinx: "properties-lazystoredproperties", docc: "properties#Lazy-Stored-Properties"),
    (stableID: "ID258", sphinx: "properties-storedpropertiesandinstancevariables", docc: "properties#Stored-Properties-and-Instance-Variables"),
    (stableID: "ID259", sphinx: "properties-computedproperties", docc: "properties#Computed-Properties"),
    (stableID: "ID260", sphinx: "properties-shorthandsetterdeclaration", docc: "properties#Shorthand-Setter-Declaration"),
    (stableID: "ID261", sphinx: "properties-readonlycomputedproperties", docc: "properties#Read-Only-Computed-Properties"),
    (stableID: "ID262", sphinx: "properties-propertyobservers", docc: "properties#Property-Observers"),
    (stableID: "ID263", sphinx: "properties-globalandlocalvariables", docc: "properties#Global-and-Local-Variables"),
    (stableID: "ID264", sphinx: "properties-typeproperties", docc: "properties#Type-Properties"),
    (stableID: "ID265", sphinx: "properties-typepropertysyntax", docc: "properties#Type-Property-Syntax"),
    (stableID: "ID266", sphinx: "properties-queryingandsettingtypeproperties", docc: "properties#Querying-and-Setting-Type-Properties"),
    (stableID: "ID267", sphinx: "LanguageGuide/Protocols", docc: ""),
    (stableID: "ID268", sphinx: "protocols-protocolsyntax", docc: "protocols#Protocol-Syntax"),
    (stableID: "ID269", sphinx: "protocols-propertyrequirements", docc: "protocols#Property-Requirements"),
    (stableID: "ID270", sphinx: "protocols-methodrequirements", docc: "protocols#Method-Requirements"),
    (stableID: "ID271", sphinx: "protocols-mutatingmethodrequirements", docc: "protocols#Mutating-Method-Requirements"),
    (stableID: "ID272", sphinx: "protocols-initializerrequirements", docc: "protocols#Initializer-Requirements"),
    (stableID: "ID273", sphinx: "protocols-classimplementationsofprotocolinitializerrequirements", docc: "protocols#Class-Implementations-of-Protocol-Initializer-Requirements"),
    (stableID: "ID274", sphinx: "protocols-failableinitializerrequirements", docc: "protocols#Failable-Initializer-Requirements"),
    (stableID: "ID275", sphinx: "protocols-protocolsastypes", docc: "protocols#Protocols-as-Types"),
    (stableID: "ID276", sphinx: "protocols-delegation", docc: "protocols#Delegation"),
    (stableID: "ID277", sphinx: "protocols-addingprotocolconformancewithanextension", docc: "protocols#Adding-Protocol-Conformance-with-an-Extension"),
    (stableID: "ID278", sphinx: "protocols-declaringprotocoladoptionwithanextension", docc: "protocols#Declaring-Protocol-Adoption-with-an-Extension"),
    (stableID: "ID279", sphinx: "protocols-collectionsofprotocoltypes", docc: "protocols#Collections-of-Protocol-Types"),
    (stableID: "ID280", sphinx: "protocols-protocolinheritance", docc: "protocols#Protocol-Inheritance"),
    (stableID: "ID281", sphinx: "protocols-classonlyprotocols", docc: "protocols#Class-Only-Protocols"),
    (stableID: "ID282", sphinx: "protocols-protocolcomposition", docc: "protocols#Protocol-Composition"),
    (stableID: "ID283", sphinx: "protocols-checkingforprotocolconformance", docc: "protocols#Checking-for-Protocol-Conformance"),
    (stableID: "ID284", sphinx: "protocols-optionalprotocolrequirements", docc: "protocols#Optional-Protocol-Requirements"),
    (stableID: "ID285", sphinx: "LanguageGuide/StringsAndCharacters", docc: ""),
    (stableID: "ID286", sphinx: "stringsandcharacters-literals", docc: ""),
    (stableID: "ID287", sphinx: "stringsandcharacters-initializinganemptystring", docc: "stringsandcharacters#Initializing-an-Empty-String"),
    (stableID: "ID288", sphinx: "stringsandcharacters-stringmutability", docc: "stringsandcharacters#String-Mutability"),
    (stableID: "ID289", sphinx: "stringsandcharacters-stringsarevaluetypes", docc: "stringsandcharacters#Strings-Are-Value-Types"),
    (stableID: "ID290", sphinx: "stringsandcharacters-workingwithcharacters", docc: "stringsandcharacters#Working-with-Characters"),
    (stableID: "ID291", sphinx: "stringsandcharacters-concatenatingstringsandcharacters", docc: "stringsandcharacters#Concatenating-Strings-and-Characters"),
    (stableID: "ID292", sphinx: "stringsandcharacters-stringinterpolation", docc: "stringsandcharacters#String-Interpolation"),
    (stableID: "ID293", sphinx: "stringsandcharacters-unicode", docc: "stringsandcharacters#Unicode"),
    (stableID: "ID294", sphinx: "stringsandcharacters-stringsareunicodescalars", docc: ""),
    (stableID: "ID295", sphinx: "stringsandcharacters-specialcharactersinstringliterals", docc: "stringsandcharacters#Special-Characters-in-String-Literals"),
    (stableID: "ID296", sphinx: "stringsandcharacters-extendedgraphemeclusters", docc: "stringsandcharacters#Extended-Grapheme-Clusters"),
    (stableID: "ID297", sphinx: "stringsandcharacters-countingcharacters", docc: "stringsandcharacters#Counting-Characters"),
    (stableID: "ID298", sphinx: "stringsandcharacters-comparingstrings", docc: "stringsandcharacters#Comparing-Strings"),
    (stableID: "ID299", sphinx: "stringsandcharacters-stringequality", docc: ""),
    (stableID: "ID300", sphinx: "stringsandcharacters-prefixandsuffixequality", docc: "stringsandcharacters#Prefix-and-Suffix-Equality"),
    (stableID: "ID301", sphinx: "stringsandcharacters-unicoderepresentationsofstrings", docc: "stringsandcharacters#Unicode-Representations-of-Strings"),
    (stableID: "ID302", sphinx: "stringsandcharacters-utf8", docc: ""),
    (stableID: "ID303", sphinx: "stringsandcharacters-utf16", docc: ""),
    (stableID: "ID304", sphinx: "stringsandcharacters-unicodescalars", docc: ""),
    (stableID: "ID305", sphinx: "LanguageGuide/Subscripts", docc: ""),
    (stableID: "ID306", sphinx: "subscripts-subscriptsyntax", docc: "subscripts#Subscript-Syntax"),
    (stableID: "ID307", sphinx: "subscripts-subscriptusage", docc: "subscripts#Subscript-Usage"),
    (stableID: "ID308", sphinx: "subscripts-subscriptoptions", docc: "subscripts#Subscript-Options"),
    (stableID: "ID309", sphinx: "LanguageGuide/TheBasics", docc: ""),
    (stableID: "ID310", sphinx: "thebasics-constantsandvariables", docc: "thebasics#Constants-and-Variables"),
    (stableID: "ID311", sphinx: "thebasics-declaringconstantsandvariables", docc: "thebasics#Declaring-Constants-and-Variables"),
    (stableID: "ID312", sphinx: "thebasics-typeannotations", docc: "thebasics#Type-Annotations"),
    (stableID: "ID313", sphinx: "thebasics-namingconstantsandvariables", docc: "thebasics#Naming-Constants-and-Variables"),
    (stableID: "ID314", sphinx: "thebasics-printingconstantsandvariables", docc: "thebasics#Printing-Constants-and-Variables"),
    (stableID: "ID315", sphinx: "thebasics-comments", docc: "thebasics#Comments"),
    (stableID: "ID316", sphinx: "thebasics-semicolons", docc: "thebasics#Semicolons"),
    (stableID: "ID317", sphinx: "thebasics-integers", docc: "thebasics#Integers"),
    (stableID: "ID318", sphinx: "thebasics-integerbounds", docc: "thebasics#Integer-Bounds"),
    (stableID: "ID319", sphinx: "thebasics-int", docc: "thebasics#Int"),
    (stableID: "ID320", sphinx: "thebasics-uint", docc: "thebasics#UInt"),
    (stableID: "ID321", sphinx: "thebasics-floatingpointnumbers", docc: "thebasics#Floating-Point-Numbers"),
    (stableID: "ID322", sphinx: "thebasics-typesafetyandtypeinference", docc: "thebasics#Type-Safety-and-Type-Inference"),
    (stableID: "ID323", sphinx: "thebasics-numericliterals", docc: "thebasics#Numeric-Literals"),
    (stableID: "ID324", sphinx: "thebasics-numerictypeconversion", docc: "thebasics#Numeric-Type-Conversion"),
    (stableID: "ID325", sphinx: "thebasics-integerconversion", docc: "thebasics#Integer-Conversion"),
    (stableID: "ID326", sphinx: "thebasics-integerandfloatingpointconversion", docc: "thebasics#Integer-and-Floating-Point-Conversion"),
    (stableID: "ID327", sphinx: "thebasics-typealiases", docc: "thebasics#Type-Aliases"),
    (stableID: "ID328", sphinx: "thebasics-booleans", docc: "thebasics#Booleans"),
    (stableID: "ID329", sphinx: "thebasics-tuples", docc: "thebasics#Tuples"),
    (stableID: "ID330", sphinx: "thebasics-optionals", docc: "thebasics#Optionals"),
    (stableID: "ID331", sphinx: "thebasics-nil", docc: "thebasics#nil"),
    (stableID: "ID332", sphinx: "thebasics-ifstatementsandforcedunwrapping", docc: "thebasics#If-Statements-and-Forced-Unwrapping"),
    (stableID: "ID333", sphinx: "thebasics-optionalbinding", docc: "thebasics#Optional-Binding"),
    (stableID: "ID334", sphinx: "thebasics-implicitlyunwrappedoptionals", docc: "thebasics#Implicitly-Unwrapped-Optionals"),
    (stableID: "ID335", sphinx: "thebasics-assertions", docc: ""),
    (stableID: "ID336", sphinx: "thebasics-debuggingwithassertions", docc: "thebasics#Debugging-with-Assertions"),
    (stableID: "ID337", sphinx: "thebasics-whentouseassertions", docc: ""),
    (stableID: "ID338", sphinx: "LanguageGuide/TypeCasting", docc: ""),
    (stableID: "ID339", sphinx: "typecasting-definingaclasshierarchyfortypecasting", docc: "typecasting#Defining-a-Class-Hierarchy-for-Type-Casting"),
    (stableID: "ID340", sphinx: "typecasting-checkingtype", docc: "typecasting#Checking-Type"),
    (stableID: "ID341", sphinx: "typecasting-downcasting", docc: "typecasting#Downcasting"),
    (stableID: "ID342", sphinx: "typecasting-typecastingforanyandanyobject", docc: "typecasting#Type-Casting-for-Any-and-AnyObject"),
    (stableID: "ID343", sphinx: "typecasting-anyobject", docc: ""),
    (stableID: "ID344", sphinx: "typecasting-any", docc: ""),
    (stableID: "ID345", sphinx: "ReferenceManual/AboutTheLanguageReference", docc: ""),
    (stableID: "ID346", sphinx: "introduction-howtoreadthegrammar", docc: ""),
    (stableID: "ID347", sphinx: "ReferenceManual/Attributes", docc: ""),
    (stableID: "ID348", sphinx: "attributes-declarationattributes", docc: "attributes#Declaration-Attributes"),
    (stableID: "ID349", sphinx: "attributes-declarationattributesusedbyinterfacebuilder", docc: "attributes#Declaration-Attributes-Used-by-Interface-Builder"),
    (stableID: "ID350", sphinx: "attributes-typeattributes", docc: "attributes#Type-Attributes"),
    (stableID: "ID351", sphinx: "ReferenceManual/Declarations", docc: ""),
    (stableID: "ID352", sphinx: "lexicalstructure-modulescope", docc: ""),
    (stableID: "ID353", sphinx: "lexicalstructure-codeblocks", docc: ""),
    (stableID: "ID354", sphinx: "declarations-importdeclaration", docc: "declarations#Import-Declaration"),
    (stableID: "ID355", sphinx: "declarations-constantdeclaration", docc: "declarations#Constant-Declaration"),
    (stableID: "ID356", sphinx: "declarations-variabledeclaration", docc: "declarations#Variable-Declaration"),
    (stableID: "ID357", sphinx: "declarations-storedvariablesandvariablestoredproperties", docc: ""),
    (stableID: "ID358", sphinx: "declarations-computedvariablesandcomputedproperties", docc: "declarations#Computed-Variables-and-Computed-Properties"),
    (stableID: "ID359", sphinx: "declarations-storedvariableobserversandpropertyobservers", docc: "declarations#Stored-Variable-Observers-and-Property-Observers"),
    (stableID: "ID360", sphinx: "declarations-staticvariableproperties", docc: ""),
    (stableID: "ID361", sphinx: "declarations-typealiasdeclaration", docc: "declarations#Type-Alias-Declaration"),
    (stableID: "ID362", sphinx: "declarations-functiondeclaration", docc: "declarations#Function-Declaration"),
    (stableID: "ID364", sphinx: "declarations-enumerationdeclaration", docc: "declarations#Enumeration-Declaration"),
    (stableID: "ID365", sphinx: "declarations-enumerationswithcasesofanytype", docc: "declarations#Enumerations-with-Cases-of-Any-Type"),
    (stableID: "ID366", sphinx: "declarations-enumerationswithrawcasevalues", docc: ""),
    (stableID: "ID367", sphinx: "declarations-structuredeclaration", docc: "declarations#Structure-Declaration"),
    (stableID: "ID368", sphinx: "declarations-classdeclaration", docc: "declarations#Class-Declaration"),
    (stableID: "ID369", sphinx: "declarations-protocoldeclaration", docc: "declarations#Protocol-Declaration"),
    (stableID: "ID370", sphinx: "declarations-protocolpropertydeclaration", docc: "declarations#Protocol-Property-Declaration"),
    (stableID: "ID371", sphinx: "declarations-protocolmethoddeclaration", docc: "declarations#Protocol-Method-Declaration"),
    (stableID: "ID372", sphinx: "declarations-protocolinitializerdeclaration", docc: "declarations#Protocol-Initializer-Declaration"),
    (stableID: "ID373", sphinx: "declarations-protocolsubscriptdeclaration", docc: "declarations#Protocol-Subscript-Declaration"),
    (stableID: "ID374", sphinx: "declarations-protocolassociatedtypedeclaration", docc: "declarations#Protocol-Associated-Type-Declaration"),
    (stableID: "ID375", sphinx: "declarations-initializerdeclaration", docc: "declarations#Initializer-Declaration"),
    (stableID: "ID376", sphinx: "declarations-failableinitializers", docc: "declarations#Failable-Initializers"),
    (stableID: "ID377", sphinx: "declarations-deinitializerdeclaration", docc: "declarations#Deinitializer-Declaration"),
    (stableID: "ID378", sphinx: "declarations-extensiondeclaration", docc: "declarations#Extension-Declaration"),
    (stableID: "ID379", sphinx: "declarations-subscriptdeclaration", docc: "declarations#Subscript-Declaration"),
    (stableID: "ID380", sphinx: "declarations-operatordeclaration", docc: "declarations#Operator-Declaration"),
    (stableID: "ID381", sphinx: "declarations-declarationmodifiers", docc: "declarations#Declaration-Modifiers"),
    (stableID: "ID382", sphinx: "declarations-accesscontrollevels", docc: "declarations#Access-Control-Levels"),
    (stableID: "ID383", sphinx: "ReferenceManual/Expressions", docc: ""),
    (stableID: "ID384", sphinx: "expressions-prefixexpressions", docc: "expressions#Prefix-Expressions"),
    (stableID: "ID385", sphinx: "expressions-binaryexpressions", docc: ""),
    (stableID: "ID386", sphinx: "expressions-assignmentoperator", docc: "expressions#Assignment-Operator"),
    (stableID: "ID387", sphinx: "expressions-ternaryconditionaloperator", docc: "expressions#Ternary-Conditional-Operator"),
    (stableID: "ID388", sphinx: "expressions-type-castingoperators", docc: "expressions#Type-Casting-Operators"),
    (stableID: "ID389", sphinx: "expressions-primaryexpressions", docc: "expressions#Primary-Expressions"),
    (stableID: "ID390", sphinx: "expressions-literalexpression", docc: "expressions#Literal-Expression"),
    (stableID: "ID391", sphinx: "expressions-selfexpression", docc: "expressions#Self-Expression"),
    (stableID: "ID392", sphinx: "expressions-superclassexpression", docc: "expressions#Superclass-Expression"),
    (stableID: "ID393", sphinx: "expressions-closureexpression", docc: "expressions#Closure-Expression"),
    (stableID: "ID394", sphinx: "expressions-implicitmemberexpression", docc: "expressions#Implicit-Member-Expression"),
    (stableID: "ID395", sphinx: "expressions-parenthesizedexpression", docc: "expressions#Parenthesized-Expression"),
    (stableID: "ID396", sphinx: "expressions-wildcardexpression", docc: "expressions#Wildcard-Expression"),
    (stableID: "ID397", sphinx: "expressions-postfixexpressions", docc: "expressions#Postfix-Expressions"),
    (stableID: "ID398", sphinx: "expressions-functioncallexpression", docc: "expressions#Function-Call-Expression"),
    (stableID: "ID399", sphinx: "expressions-initializerexpression", docc: "expressions#Initializer-Expression"),
    (stableID: "ID400", sphinx: "expressions-explicitmemberexpression", docc: "expressions#Explicit-Member-Expression"),
    (stableID: "ID401", sphinx: "expressions-postfixselfexpression", docc: "expressions#Postfix-Self-Expression"),
    (stableID: "ID402", sphinx: "expressions-dynamictypeexpression", docc: ""),
    (stableID: "ID403", sphinx: "expressions-subscriptexpression", docc: "expressions#Subscript-Expression"),
    (stableID: "ID404", sphinx: "expressions-forced-valueexpression", docc: "expressions#Forced-Value-Expression"),
    (stableID: "ID405", sphinx: "expression-optionalchainingoperator", docc: ""),
    (stableID: "ID406", sphinx: "ReferenceManual/GenericParametersAndArguments", docc: ""),
    (stableID: "ID407", sphinx: "genericparametersandarguments-genericparameterclause", docc: "genericparametersandarguments#Generic-Parameter-Clause"),
    (stableID: "ID408", sphinx: "genericparametersandarguments-whereclauses", docc: ""),
    (stableID: "ID409", sphinx: "genericparametersandarguments-genericargumentclause", docc: "genericparametersandarguments#Generic-Argument-Clause"),
    (stableID: "ID410", sphinx: "ReferenceManual/LexicalStructure", docc: ""),
    (stableID: "ID411", sphinx: "lexicalstructure-whitespaceandcomments", docc: "lexicalstructure#Whitespace-and-Comments"),
    (stableID: "ID412", sphinx: "lexicalstructure-identifiers", docc: "lexicalstructure#Identifiers"),
    (stableID: "ID413", sphinx: "lexicalstructure-keywords", docc: ""),
    (stableID: "ID414", sphinx: "lexicalstructure-literals", docc: "lexicalstructure#Literals"),
    (stableID: "ID415", sphinx: "lexicalstructure-integerliterals", docc: "lexicalstructure#Integer-Literals"),
    (stableID: "ID416", sphinx: "lexicalstructure-floating-pointliterals", docc: "lexicalstructure#Floating-Point-Literals"),
    (stableID: "ID417", sphinx: "lexicalstructure-stringliterals", docc: "lexicalstructure#String-Literals"),
    (stableID: "ID418", sphinx: "lexicalstructure-operators", docc: "lexicalstructure#Operators"),
    (stableID: "ID419", sphinx: "ReferenceManual/Patterns", docc: ""),
    (stableID: "ID420", sphinx: "patterns-wildcardpattern", docc: "patterns#Wildcard-Pattern"),
    (stableID: "ID421", sphinx: "patterns-identifierpattern", docc: "patterns#Identifier-Pattern"),
    (stableID: "ID422", sphinx: "patterns-value-bindingpattern", docc: "patterns#Value-Binding-Pattern"),
    (stableID: "ID423", sphinx: "patterns-tuplepattern", docc: "patterns#Tuple-Pattern"),
    (stableID: "ID424", sphinx: "patterns-enumerationcasepattern", docc: "patterns#Enumeration-Case-Pattern"),
    (stableID: "ID425", sphinx: "patterns-type-castingpatterns", docc: "patterns#Type-Casting-Patterns"),
    (stableID: "ID426", sphinx: "patterns-expressionpattern", docc: "patterns#Expression-Pattern"),
    (stableID: "ID427", sphinx: "ReferenceManual/ReferenceManualPart", docc: ""),
    (stableID: "ID428", sphinx: "ReferenceManual/Statements", docc: ""),
    (stableID: "ID429", sphinx: "statements-loopstatements", docc: "statements#Loop-Statements"),
    (stableID: "ID430", sphinx: "statements-forstatement", docc: ""),
    (stableID: "ID431", sphinx: "statements-for-instatement", docc: "statements#For-In-Statement"),
    (stableID: "ID432", sphinx: "statements-whilestatement", docc: "statements#While-Statement"),
    (stableID: "ID433", sphinx: "statements-do-whilestatement", docc: ""),
    (stableID: "ID434", sphinx: "statements-branchstatements", docc: "statements#Branch-Statements"),
    (stableID: "ID435", sphinx: "statements-ifstatement", docc: "statements#If-Statement"),
    (stableID: "ID436", sphinx: "statements-switchstatement", docc: "statements#Switch-Statement"),
    (stableID: "ID437", sphinx: "statements-switchstatementsmustbeexhaustive", docc: "statements#Switch-Statements-Must-Be-Exhaustive"),
    (stableID: "ID438", sphinx: "statements-executiondoesnotfallthroughcasesimplicitly", docc: "statements#Execution-Does-Not-Fall-Through-Cases-Implicitly"),
    (stableID: "ID439", sphinx: "statements-labeledstatement", docc: "statements#Labeled-Statement"),
    (stableID: "ID440", sphinx: "statements-controltransferstatements", docc: "statements#Control-Transfer-Statements"),
    (stableID: "ID441", sphinx: "statements-breakstatement", docc: "statements#Break-Statement"),
    (stableID: "ID442", sphinx: "statements-continuestatement", docc: "statements#Continue-Statement"),
    (stableID: "ID443", sphinx: "statements-fallthroughstatement", docc: "statements#Fallthrough-Statement"),
    (stableID: "ID444", sphinx: "statements-returnstatement", docc: "statements#Return-Statement"),
    (stableID: "ID445", sphinx: "ReferenceManual/Types", docc: ""),
    (stableID: "ID446", sphinx: "types-typeannotation", docc: "types#Type-Annotation"),
    (stableID: "ID447", sphinx: "types-typeidentifier", docc: "types#Type-Identifier"),
    (stableID: "ID448", sphinx: "types-tupletype", docc: "types#Tuple-Type"),
    (stableID: "ID449", sphinx: "types-functiontype", docc: "types#Function-Type"),
    (stableID: "ID450", sphinx: "types-arraytype", docc: "types#Array-Type"),
    (stableID: "ID451", sphinx: "types-dictionarytype", docc: "types#Dictionary-Type"),
    (stableID: "ID452", sphinx: "types-optionaltype", docc: "types#Optional-Type"),
    (stableID: "ID453", sphinx: "types-implicitlyunwrappedoptionaltype", docc: "types#Implicitly-Unwrapped-Optional-Type"),
    (stableID: "ID454", sphinx: "types-protocolcompositiontype", docc: "types#Protocol-Composition-Type"),
    (stableID: "ID455", sphinx: "types-metatypetype", docc: "types#Metatype-Type"),
    (stableID: "ID456", sphinx: "types-typeinheritanceclause", docc: "types#Type-Inheritance-Clause"),
    (stableID: "ID457", sphinx: "types-typeinference", docc: "types#Type-Inference"),
    (stableID: "ID458", sphinx: "ReferenceManual/zzSummaryOfTheGrammar", docc: ""),
    (stableID: "ID459", sphinx: "RevisionHistory/RevisionHistory", docc: ""),
    (stableID: "ID460", sphinx: "RevisionHistory/RevisionHistoryPart", docc: ""),
    (stableID: "ID461", sphinx: "tour-simplevalues", docc: "guidedtour#Simple-Values"),
    (stableID: "ID462", sphinx: "tour-controlflow", docc: "guidedtour#Control-Flow"),
    (stableID: "ID463", sphinx: "tour-functionsandclosures", docc: "guidedtour#Functions-and-Closures"),
    (stableID: "ID464", sphinx: "tour-classes", docc: ""),
    (stableID: "ID465", sphinx: "tour-enumsandstructs", docc: ""),
    (stableID: "ID466", sphinx: "tour-protocolsandextensions", docc: ""),
    (stableID: "ID468", sphinx: "accesscontrol-rawvaluesandassociatedvalues", docc: "accesscontrol#Raw-Values-and-Associated-Values"),
    (stableID: "ID470", sphinx: "extensions-extensionsyntax", docc: "extensions#Extension-Syntax"),
    (stableID: "ID471", sphinx: "declarations-parameternames", docc: "declarations#Parameter-Names"),
    (stableID: "ID472", sphinx: "declarations-specialkindsofparameters", docc: "declarations#Special-Kinds-of-Parameters"),
    (stableID: "ID473", sphinx: "declarations-specialkindsofmethods", docc: "declarations#Special-Kinds-of-Methods"),
    (stableID: "ID474", sphinx: "declarations-enumerationcases", docc: ""),
    (stableID: "ID475", sphinx: "grammar-summary--Statements", docc: ""),
    (stableID: "ID476", sphinx: "grammar-summary--Generic Parameters and Arguments", docc: ""),
    (stableID: "ID477", sphinx: "grammar-summary--Declarations", docc: ""),
    (stableID: "ID478", sphinx: "grammar-summary--Patterns", docc: ""),
    (stableID: "ID479", sphinx: "grammar-summary--Attributes", docc: ""),
    (stableID: "ID480", sphinx: "grammar-summary--Expressions", docc: ""),
    (stableID: "ID481", sphinx: "grammar-summary--Lexical Structure", docc: ""),
    (stableID: "ID482", sphinx: "grammar-summary--Types", docc: ""),
    (stableID: "ID483", sphinx: "declarations-typevariableproperties", docc: "declarations#Type-Variable-Properties"),
    (stableID: "ID484", sphinx: "collectiontypes-sets", docc: "collectiontypes#Sets"),
    (stableID: "ID485", sphinx: "collectiontypes-settypeshorthandsyntax", docc: ""),
    (stableID: "ID486", sphinx: "collectiontypes-creatingandinitializingaset", docc: ""),
    (stableID: "ID487", sphinx: "collectiontypes-setwitharrayliterals", docc: ""),
    (stableID: "ID488", sphinx: "collectiontypes-accessingandmodifyingaset", docc: "collectiontypes#Accessing-and-Modifying-a-Set"),
    (stableID: "ID489", sphinx: "collectiontypes-iteratingoveraset", docc: "collectiontypes#Iterating-Over-a-Set"),
    (stableID: "ID490", sphinx: "collectiontypes-performingsetoperations", docc: "collectiontypes#Performing-Set-Operations"),
    (stableID: "ID492", sphinx: "collectiontypes-comparingsets", docc: ""),
    (stableID: "ID493", sphinx: "collectiontypes-hashvaluesforsettypes", docc: "collectiontypes#Hash-Values-for-Set-Types"),
    (stableID: "ID494", sphinx: "stringsandcharacters-accessingandmodifyingastring", docc: "stringsandcharacters#Accessing-and-Modifying-a-String"),
    (stableID: "ID495", sphinx: "stringsandcharacters-stringindexes", docc: ""),
    (stableID: "ID496", sphinx: "stringsandcharacters-insertingandremoving", docc: "stringsandcharacters#Inserting-and-Removing"),
    (stableID: "ID499", sphinx: "collectiontypes-constructingsets", docc: ""),
    (stableID: "ID500", sphinx: "collectiontypes-creatinganemptyarray", docc: "collectiontypes#Creating-an-Empty-Array"),
    (stableID: "ID501", sphinx: "collectiontypes-creatinganarraywithadefaultvalue", docc: "collectiontypes#Creating-an-Array-with-a-Default-Value"),
    (stableID: "ID502", sphinx: "collectiontypes-creatinganarraybyaddingtwoarraystogether", docc: "collectiontypes#Creating-an-Array-by-Adding-Two-Arrays-Together"),
    (stableID: "ID503", sphinx: "collectiontypes-creatingandinitializinganemptyset", docc: "collectiontypes#Creating-and-Initializing-an-Empty-Set"),
    (stableID: "ID504", sphinx: "collectiontypes-creatingasetwithanarrayliteral", docc: "collectiontypes#Creating-a-Set-with-an-Array-Literal"),
    (stableID: "ID505", sphinx: "collectiontypes-fundamentalsetoperations", docc: "collectiontypes#Fundamental-Set-Operations"),
    (stableID: "ID506", sphinx: "collectiontypes-setmembershipandequality", docc: "collectiontypes#Set-Membership-and-Equality"),
    (stableID: "ID507", sphinx: "collectiontypes-creatingadictionarywithadictionaryliteral", docc: "collectiontypes#Creating-a-Dictionary-with-a-Dictionary-Literal"),
    (stableID: "ID508", sphinx: "LanguageGuide/ErrorHandling", docc: ""),
    (stableID: "ID509", sphinx: "errorhandling-represent", docc: ""),
    (stableID: "ID510", sphinx: "errorhandling-throw", docc: ""),
    (stableID: "ID511", sphinx: "errorhandling-rethrow", docc: ""),
    (stableID: "ID512", sphinx: "errorhandling-catch", docc: ""),
    (stableID: "ID513", sphinx: "errorhandling-force", docc: ""),
    (stableID: "ID514", sphinx: "errorhandling-defer", docc: ""),
    (stableID: "ID515", sphinx: "thebasics-errorhandling", docc: "thebasics#Error-Handling"),
    (stableID: "ID516", sphinx: "expressions-tryexpression", docc: ""),
    (stableID: "ID517", sphinx: "expressions-forcedtryexpression", docc: ""),
    (stableID: "ID518", sphinx: "statements-throwstatement", docc: "statements#Throw-Statement"),
    (stableID: "ID519", sphinx: "accesscontrol-accesslevelsfortesttargets", docc: ""),
    (stableID: "ID520", sphinx: "patterns-optionalpattern", docc: "patterns#Optional-Pattern"),
    (stableID: "ID521", sphinx: "protocols-extensions", docc: ""),
    (stableID: "ID522", sphinx: "statements-availabilitycondition", docc: "statements#Availability-Condition"),
    (stableID: "ID523", sphinx: "controlflow-available", docc: ""),
    (stableID: "ID524", sphinx: "statements-guardstatement", docc: "statements#Guard-Statement"),
    (stableID: "ID525", sphinx: "controlflow-guard", docc: ""),
    (stableID: "ID526", sphinx: "functions-omittingparameternames", docc: ""),
    (stableID: "ID527", sphinx: "protocols-addingconstraintstoprotocolextensions", docc: "protocols#Adding-Constraints-to-Protocol-Extensions"),
    (stableID: "ID528", sphinx: "functions-functionswithmultipleinputparameters", docc: ""),
    (stableID: "ID529", sphinx: "protocols-providingdefaultimplementations", docc: "protocols#Providing-Default-Implementations"),
    (stableID: "ID530", sphinx: "declarations-throwingfunctionsandmethods", docc: "declarations#Throwing-Functions-and-Methods"),
    (stableID: "ID531", sphinx: "declarations-rethrowingfunctionsandmethods", docc: "declarations#Rethrowing-Functions-and-Methods"),
    (stableID: "ID532", sphinx: "statements-deferstatement", docc: "statements#Defer-Statement"),
    (stableID: "ID533", sphinx: "statements-dostatement", docc: "statements#Do-Statement"),
    (stableID: "ID534", sphinx: "stringsandcharacters-stringindices", docc: "stringsandcharacters#String-Indices"),
    (stableID: "ID535", sphinx: "enumerations-implicitlyassignedrawvalues", docc: "enumerations#Implicitly-Assigned-Raw-Values"),
    (stableID: "ID536", sphinx: "enumerations-recursiveenumerations", docc: "enumerations#Recursive-Enumerations"),
    (stableID: "ID537", sphinx: "declarations-enumerationswithindirection", docc: "declarations#Enumerations-with-Indirection"),
    (stableID: "ID538", sphinx: "statements-compilercontrolstatements", docc: "statements#Compiler-Control-Statements"),
    (stableID: "ID539", sphinx: "statements-buildconfigurationstatement", docc: ""),
    (stableID: "ID540", sphinx: "statements-linecontrolstatement", docc: "statements#Line-Control-Statement"),
    (stableID: "ID541", sphinx: "errorhandling-docatch", docc: ""),
    (stableID: "ID542", sphinx: "errorhandling-optional", docc: ""),
    (stableID: "ID543", sphinx: "closures-autoclosures", docc: "closures#Autoclosures"),
    (stableID: "ID544", sphinx: "expressions-capturelists", docc: "expressions#Capture-Lists"),
    (stableID: "ID545", sphinx: "declarations-inoutparameters", docc: "declarations#In-Out-Parameters"),
    (stableID: "ID546", sphinx: "closures-noescape", docc: ""),
    (stableID: "ID547", sphinx: "expression-selectorexpression", docc: ""),
    (stableID: "ID548", sphinx: "controlflow-compoundcases", docc: "controlflow#Compound-Cases"),
    (stableID: "ID549", sphinx: "expression-keypathexpression", docc: ""),
    (stableID: "ID550", sphinx: "declarations-precedencegroupdeclaration", docc: "declarations#Precedence-Group-Declaration"),
    (stableID: "ID551", sphinx: "declarations-functionsthatneverreturn", docc: "declarations#Functions-that-Never-Return"),
    (stableID: "ID552", sphinx: "expressions-tupleexpression", docc: "expressions#Tuple-Expression"),
    (stableID: "ID553", sphinx: "generics-extensionwithwhereclause", docc: ""),
    (stableID: "ID554", sphinx: "thebasics-preconditions", docc: ""),
    (stableID: "ID555", sphinx: "stringsandcharacters-substrings", docc: "stringsandcharacters#Substrings"),
    (stableID: "ID557", sphinx: "generics-associatedtypeswithwhereclause", docc: ""),
    (stableID: "ID558", sphinx: "generics-subscripts", docc: ""),
    (stableID: "ID559", sphinx: "accesscontrol-privateextension", docc: ""),
    (stableID: "ID560", sphinx: "generics-constrainassociatedtype", docc: ""),
    (stableID: "ID561", sphinx: "GuidedTour/Compatibility", docc: ""),
    (stableID: "ID562", sphinx: "basicoperators-onesidedranges", docc: "basicoperators#One-Sided-Ranges"),
    (stableID: "ID563", sphinx: "expression-typedkeypathexpression", docc: "expressions#Key-Path-Expression"),
    (stableID: "ID564", sphinx: "stringsandcharacters-multilineliterals", docc: ""),
    (stableID: "ID565", sphinx: "stringsandcharacters-multilineliteralslinebreaks", docc: ""),
    (stableID: "ID566", sphinx: "stringsandcharacters-multilineliteralsindentation", docc: ""),
    (stableID: "ID567", sphinx: "LanguageGuide/MemorySafety", docc: ""),
    (stableID: "ID568", sphinx: "memorysafety-whatisexclusivity", docc: ""),
    (stableID: "ID569", sphinx: "memorysafety-inout", docc: ""),
    (stableID: "ID570", sphinx: "memorysafety-methods", docc: ""),
    (stableID: "ID571", sphinx: "memorysafety-properties", docc: ""),
    (stableID: "ID572", sphinx: "types-functionparameterconflicts", docc: ""),
    (stableID: "ID573", sphinx: "memory-characteristics", docc: ""),
    (stableID: "ID574", sphinx: "protocols-declaringconditionalconformancetoaprotocol", docc: ""),
    (stableID: "ID575", sphinx: "generics-recursiveprotocol", docc: ""),
    (stableID: "ID576", sphinx: "declarations-conditionalconformance", docc: "declarations#Conditional-Conformance"),
    (stableID: "ID577", sphinx: "declarations-overrideconformance", docc: ""),
    (stableID: "ID578", sphinx: "declarations-noredundantconformance", docc: ""),
    (stableID: "ID579", sphinx: "declarations-resolvingexplicitredundancy", docc: "declarations#Resolving-Explicit-Redundancy"),
    (stableID: "ID580", sphinx: "declarations-explicitconformanceinheritance", docc: ""),
    (stableID: "ID581", sphinx: "enumerations-allcases", docc: ""),
    (stableID: "ID582", sphinx: "statements-errorwarning", docc: ""),
    (stableID: "ID583", sphinx: "attributes-available", docc: "attributes#available"),
    (stableID: "ID584", sphinx: "attributes-discardableresult", docc: "attributes#discardableResult"),
    (stableID: "ID585", sphinx: "attributes-dynamicmemberlookup", docc: "attributes#dynamicMemberLookup"),
    (stableID: "ID586", sphinx: "attributes-gkinspectable", docc: "attributes#GKInspectable"),
    (stableID: "ID587", sphinx: "attributes-inlinable", docc: "attributes#inlinable"),
    (stableID: "ID588", sphinx: "attributes-nonobjc", docc: "attributes#nonobjc"),
    (stableID: "ID589", sphinx: "attributes-nsapplicationmain", docc: "attributes#NSApplicationMain"),
    (stableID: "ID590", sphinx: "attributes-nscopying", docc: "attributes#NSCopying"),
    (stableID: "ID591", sphinx: "attributes-nsmanaged", docc: "attributes#NSManaged"),
    (stableID: "ID592", sphinx: "attributes-objc", docc: "attributes#objc"),
    (stableID: "ID593", sphinx: "attributes-objcmembers", docc: "attributes#objcMembers"),
    (stableID: "ID594", sphinx: "attributes-requires-stored-property-inits", docc: "attributes#requiresstoredpropertyinits"),
    (stableID: "ID595", sphinx: "attributes-testable", docc: "attributes#testable"),
    (stableID: "ID596", sphinx: "attributes-uiapplicationmain", docc: "attributes#UIApplicationMain"),
    (stableID: "ID597", sphinx: "attributes-usablefrominline", docc: "attributes#usableFromInline"),
    (stableID: "ID598", sphinx: "attributes-warn-unqualified-access", docc: "attributes#warnunqualifiedaccess"),
    (stableID: "ID599", sphinx: "attributes-autoclosure", docc: "attributes#autoclosure"),
    (stableID: "ID600", sphinx: "attributes-convention", docc: "attributes#convention"),
    (stableID: "ID601", sphinx: "attributes-escaping", docc: "attributes#escaping"),
    (stableID: "ID602", sphinx: "statements-switchingoverfutureenumerationcases", docc: "statements#Switching-Over-Future-Enumeration-Cases"),
    (stableID: "ID603", sphinx: "attributes-dynamiccallable", docc: "attributes#dynamicCallable"),
    (stableID: "ID604", sphinx: "attributes-switchcaseattributes", docc: "attributes#Switch-Case-Attributes"),
    (stableID: "ID605", sphinx: "attributes-unknown", docc: "attributes#unknown"),
    (stableID: "ID606", sphinx: "stringsandcharacters-extendeddelimiters", docc: ""),
    (stableID: "ID607", sphinx: "functions-implicitreturns", docc: ""),
    (stableID: "ID608", sphinx: "properties-implicitreturn", docc: ""),
    (stableID: "ID609", sphinx: "subscripts-typesubscripts", docc: "subscripts#Type-Subscripts"),
    (stableID: "ID610", sphinx: "types-selftype", docc: "types#Self-Type"),
    (stableID: "ID611", sphinx: "declarations-typesubscriptdeclaration", docc: ""),
    (stableID: "ID612", sphinx: "LanguageGuide/OpaqueTypes", docc: ""),
    (stableID: "ID613", sphinx: "opaquetypes-limitsofgenerics", docc: ""),
    (stableID: "ID614", sphinx: "opaquetypes-returning", docc: ""),
    (stableID: "ID615", sphinx: "opaquetypes-limitsofexistentials", docc: ""),
    (stableID: "ID616", sphinx: "types-opaquetype", docc: "types#Opaque-Type"),
    (stableID: "ID617", sphinx: "properties-propertywrapper", docc: "properties#Property-Wrappers"),
    (stableID: "ID618", sphinx: "properties-propertywrapperinit", docc: "properties#Setting-Initial-Values-for-Wrapped-Properties"),
    (stableID: "ID619", sphinx: "properties-projectedvalues", docc: "properties#Projecting-a-Value-From-a-Property-Wrapper"),
    (stableID: "ID620", sphinx: "attributes-frozen", docc: "attributes#frozen"),
    (stableID: "ID621", sphinx: "attributes-propertywrapper", docc: "attributes#propertyWrapper"),
    (stableID: "ID622", sphinx: "declarations-specialfuncnames", docc: "declarations#Methods-with-Special-Names"),
    (stableID: "ID623", sphinx: "tour-errorhandling", docc: ""),
    (stableID: "ID624", sphinx: "tour-generics", docc: ""),
    (stableID: "ID625", sphinx: "automaticreferencecounting-unownedoptionalreferences", docc: "automaticreferencecounting#Unowned-Optional-References"),
    (stableID: "ID626", sphinx: "attributes-main", docc: "attributes#main"),
    (stableID: "ID627", sphinx: "protocols-synthesizedimplementation", docc: ""),
    (stableID: "ID628", sphinx: "generics-contextualwhereclause", docc: ""),
    (stableID: "ID629", sphinx: "types-anytype", docc: "types#Any-Type"),
    (stableID: "ID630", sphinx: "advancedoperators-resultbuilders", docc: "advancedoperators#Result-Builders"),
    (stableID: "ID631", sphinx: "expressions-inoutexpression", docc: "expressions#In-Out-Expression"),
    (stableID: "ID632", sphinx: "expressions-implicitconversion", docc: ""),
    (stableID: "ID633", sphinx: "attributes-resultbuilder", docc: "attributes#resultBuilder"),
    (stableID: "ID634", sphinx: "attributes-resultbuilder-methods", docc: ""),
    (stableID: "ID635", sphinx: "attributes-resultbuilder-transformation", docc: ""),
    (stableID: "ID636", sphinx: "attributes-resultbuilder-attribute", docc: ""),
    (stableID: "ID637", sphinx: "tour-concurrency", docc: ""),
    (stableID: "ID638", sphinx: "LanguageGuide/Concurrency", docc: ""),
    (stableID: "ID639", sphinx: "concurrency-asyncfunc", docc: ""),
    (stableID: "ID640", sphinx: "concurrency-asyncsequence", docc: ""),
    (stableID: "ID641", sphinx: "concurrency-asynclet", docc: ""),
    (stableID: "ID642", sphinx: "concurrency-tasks", docc: ""),
    (stableID: "ID643", sphinx: "concurrency-taskhandle", docc: ""),
    (stableID: "ID644", sphinx: "concurrency-taskcancellation", docc: "concurrency#Task-Cancellation"),
    (stableID: "ID645", sphinx: "concurrency-actors", docc: "concurrency#Actors"),
    (stableID: "ID646", sphinx: "expressions-awaitexpression", docc: ""),
    (stableID: "ID647", sphinx: "declarations-asyncfunctions", docc: ""),
    (stableID: "ID648", sphinx: "declarations-actordeclaration", docc: "declarations#Actor-Declaration"),
    (stableID: "ID649", sphinx: "concurrency-sendable", docc: ""),
    (stableID: "ID650", sphinx: "lexicalstructure-regexliterals", docc: ""),
    (stableID: "ID651", sphinx: "attributes-unchecked", docc: "attributes#unchecked"),
    (stableID: "ID652", sphinx: "attributes-sendable", docc: "attributes#Sendable"),
]

let chapters: [(String, String, String)] = [
    (part: "GuidedTour", filename: "AboutSwift.html", docc: "aboutswift"),
    (part: "GuidedTour", filename: "Compatibility.html", docc: "compatibility"),
    (part: "GuidedTour", filename: "GuidedTour.html", docc: "guidedtour"),
    (part: "GuidedTour", filename: "GuidedTourPart.html", docc: "guidedtour"),

    (part: "LanguageGuide", filename: "AccessControl.html", docc: "accesscontrol"),
    (part: "LanguageGuide", filename: "AdvancedOperators.html", docc: "advancedoperators"),
    (part: "LanguageGuide", filename: "AutomaticReferenceCounting.html", docc: "automaticreferencecounting"),
    (part: "LanguageGuide", filename: "BasicOperators.html", docc: "basicoperators"),
    (part: "LanguageGuide", filename: "ClassesAndStructures.html", docc: "classesandstructures"),
    (part: "LanguageGuide", filename: "Closures.html", docc: "closures"),
    (part: "LanguageGuide", filename: "CollectionTypes.html", docc: "collectiontypes"),
    (part: "LanguageGuide", filename: "Concurrency.html", docc: "concurrency"),
    (part: "LanguageGuide", filename: "ControlFlow.html", docc: "controlflow"),
    (part: "LanguageGuide", filename: "Deinitialization.html", docc: "deinitialization"),
    (part: "LanguageGuide", filename: "Enumerations.html", docc: "enumerations"),
    (part: "LanguageGuide", filename: "ErrorHandling.html", docc: "errorhandling"),
    (part: "LanguageGuide", filename: "Extensions.html", docc: "extensions"),
    (part: "LanguageGuide", filename: "Functions.html", docc: "functions"),
    (part: "LanguageGuide", filename: "Generics.html", docc: "generics"),
    (part: "LanguageGuide", filename: "Inheritance.html", docc: "inheritance"),
    (part: "LanguageGuide", filename: "Initialization.html", docc: "initialization"),
    (part: "LanguageGuide", filename: "LanguageGuidePart.html", docc: "languageguide"),
    (part: "LanguageGuide", filename: "MemorySafety.html", docc: "memorysafety"),
    (part: "LanguageGuide", filename: "Methods.html", docc: "methods"),
    (part: "LanguageGuide", filename: "NestedTypes.html", docc: "nestedtypes"),
    (part: "LanguageGuide", filename: "OpaqueTypes.html", docc: "opaquetypes"),
    (part: "LanguageGuide", filename: "OptionalChaining.html", docc: "optionalchaining"),
    (part: "LanguageGuide", filename: "Properties.html", docc: "properties"),
    (part: "LanguageGuide", filename: "Protocols.html", docc: "protocols"),
    (part: "LanguageGuide", filename: "StringsAndCharacters.html", docc: "stringsandcharacters"),
    (part: "LanguageGuide", filename: "Subscripts.html", docc: "subscripts"),
    (part: "LanguageGuide", filename: "TheBasics.html", docc: "thebasics"),
    (part: "LanguageGuide", filename: "TypeCasting.html", docc: "typecasting"),

    (part: "ReferenceManual", filename: "AboutTheLanguageReference.html", docc: "aboutthelanguagereference"),
    (part: "ReferenceManual", filename: "Attributes.html", docc: "attributes"),
    (part: "ReferenceManual", filename: "Declarations.html", docc: "declarations"),
    (part: "ReferenceManual", filename: "Expressions.html", docc: "expressions"),
    (part: "ReferenceManual", filename: "GenericParametersAndArguments.html", docc: "genericparametersandarguments"),
    (part: "ReferenceManual", filename: "LexicalStructure.html", docc: "lexicalstructure"),
    (part: "ReferenceManual", filename: "Patterns.html", docc: "patterns"),
    (part: "ReferenceManual", filename: "ReferenceManualPart.html", docc: "referencemanual"),
    (part: "ReferenceManual", filename: "Statements.html", docc: "statements"),
    (part: "ReferenceManual", filename: "Types.html", docc: "types"),
    (part: "ReferenceManual", filename: "zzSummaryOfTheGrammar.html", docc: "summaryofthegrammar"),

    (part: "RevisionHistory", filename: "RevisionHistory.html", docc: "revisionhistory"),
    (part: "RevisionHistory", filename: "RevisionHistoryPart.html", docc: "revisionhistory"),
]


// Values to interpolate into the JavaScript
var headingRedirects = ""
var chapterRedirects = ""

for case let (stableID, _, docc) in headings {
    if docc == "" { continue }
    headingRedirects +=
        """
            "#\(stableID)": "\(docc)",\n
        """
}

for case let (part, filename, docc) in chapters {
    chapterRedirects +=
        """
            "\(filename)": "\(docc)",\n
        """
}

for case let (part, filename, docc) in chapters {
    let html =
    """
    <html>
    <head>
        <title>The Swift Programming Language: Redirect</title>
        <meta http-equiv="refresh" content="10; url=https://docs.swift.org/swift-book/documentation/the-swift-programming-language/\(docc)">
    </head>
    <body>
    <div>
    This content has moved; redirecting to the
    <a href="https://docs.swift.org/swift-book/documentation/the-swift-programming-language/" id="redirect">new location</a>.
    <noscript>
    <aside>
    This page requires JavaScript.
    Please turn on JavaScript and refresh the page.
    </aside>
    </noscript>
    </div>
    <script>
    const headingRedirects = {
    \(headingRedirects)
    }

    const chapterRedirects = {
    \(chapterRedirects)
    }

    const path = window.location.pathname;
    const pathComponents = path.split("/");
    const chapter = pathComponents[pathComponents.length - 1];

    let hash = window.location.hash;

    if (hash.startsWith("#//apple_ref/doc/uid/")) {
        const appleRefParts = hash.split("-");
        hash = appleRefParts[2];
    }

    const baseURL = "https://docs.swift.org/swift-book/documentation/the-swift-programming-language/";
    var newURL = baseURL;

    if (hash in headingRedirects) {
        const redirectPath = headingRedirects[hash];
        newURL = baseURL + redirectPath;
    } else if (chapter in chapterRedirects) {
        const redirectPath = chapterRedirects[chapter];
        newURL = baseURL + redirectPath;
    }

    document.getElementById("redirect").setAttribute("href", newURL);
    window.location = newURL;
    </script>
    </body>
    </html>
    """

    let outputURL = URL(fileURLWithPath: part + "/" + filename)
    try html.data(using: .utf8)!.write(to: outputURL)
}
